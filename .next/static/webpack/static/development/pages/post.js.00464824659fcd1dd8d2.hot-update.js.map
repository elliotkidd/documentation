{"version":3,"file":"static/webpack/static/development/pages/post.js.00464824659fcd1dd8d2.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport styled from 'styled-components';\nimport parse from 'html-react-parser';\nimport nanoid from 'nanoid';\nimport { getSinglePost, getAllPosts, getAssets } from '../util/dataFetching';\nimport Layout from '../components/MyLayout';\nimport Title from '../components/atoms/Title';\nimport Text from '../components/atoms/Text';\nimport Box from '../components/atoms/Box';\nimport '../style.scss';\n\nconst options = {\n  renderNode: {\n    [BLOCKS.EMBEDDED_ASSET]: node =>\n      `<img class=\"img\" src=\"${node.data.target.sys.id}\" id=\"\" alt='oi' />`\n  }\n};\n\nconst StyledTitle = styled(Title)`\n  font-family: 'adelle-sans';\n`;\n\nconst swapUrlForID = async (string, slug) => {\n  const newString = string;\n  const assetArray = getAssets(slug)\n    .then(assets =>\n      assets.map(a => {\n        const obj = {};\n        obj.id = a.sys.id;\n        obj.url = a.fields.file.url;\n        return obj;\n      })\n    )\n    .then(a => a.map(object => newString.replace(object.id, object.url)));\n  return assetArray;\n};\n\nconst Content = ({ content, title, slug }) => {\n  if (Array.isArray(content)) {\n    content = content.toString();\n  }\n  const parsed = parse(content);\n  return (\n    <div>\n      <Title is=\"h2\" size=\"h2\">\n        {title}\n      </Title>\n      <Box>{parsed}</Box>\n    </div>\n  );\n};\n\nconst Page = ({ sidebar, data, title, slug }) => (\n  <Layout sidebar={sidebar}>\n    <Content title={title} content={data} slug={slug} />\n  </Layout>\n);\n\nPage.getInitialProps = async props => {\n  const sidebar = await getAllPosts();\n  const data = await getSinglePost(props);\n\n  const htmlString = documentToHtmlString(data.data.content, options);\n\n  if (data.assets) {\n    const newdata = await swapUrlForID(htmlString, props.query.slug);\n    return { sidebar: sidebar.data, data: newdata, title: data.data.title, slug: props.query.slug };\n  }\n  return {\n    sidebar: sidebar.data,\n    data: htmlString,\n    title: data.data.title,\n    slug: props.query.slug\n  };\n};\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAXA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}